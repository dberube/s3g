#!/usr/bin/env node
var jetpack = require('fs-jetpack');
var read    = require('read');
var _       = require('lodash');
var config  = require( __dirname + '/../config' );
var Project = require( __dirname + '/../lib/project');

var args    = _.slice( process.argv, 2 );
var cwd     = process.cwd();

var command = args[0];
var options = _.slice( args, 1 );

var project = new Project( command, options );
var handler = project.runCommand();

handler
	.then(function( result ) {
		console.log( result );
	})
	.catch(function( error ) {
		console.log( 'Oopsie...', error.stack );
	});

// switch( _.toLower(command) ) {
//
// 	case 'init':
// 		var desiredPath = args[0] || '.';
// 		var projectPath = jetpack.cwd( desiredPath );
//
// 		init( projectPath, function(err, res) {
// 			if (err) process.exit(console.log( 'OOPS!:', err.message ));
// 			console.log( 'New s3f project initiated at: ' + desiredPath );
// 		});
//
// 		break;
//
// 	case 'new':
// 		var name        = _.kebabCase( args[0] ) || false ;
// 		var desiredPath = args[1] || '.';
//
// 		create( name, desiredPath, function(err, res) {
// 			if (err) process.exit(console.log( 'OOPS!:', err.message ));
// 			console.log( 'New s3f template named, ' + name + ', created!' );
// 		});
//
// 		break;
//
// 	default:
// 		console.log( 'Invalid command, try "s3f new"' );
// 		break;
//
// }
//
// function init( projectPath, callback ) {
// 	process.exit(console.log( 'a', projectPath.cwd() ));
// 	if (isEmpty( workingPath )) {
// 		console.log(  );
// 	}
//
// 	if (isInit( workingPath ) == true) {
// 		var error = new Error( 'An s3f project already exists at this location, try "s3f new <template-name> <path>"' );
// 		return callback( error );
// 	}
//
// 	var name = 'default';
//
// 	copyFiles( workingPath );
// 	copyTemplate( name, workingPath );
//
// 	return callback( null, true );
//
// }
//
//
// function create( name, workingPath, callback ) {
// 	var workingPath = jetpack.cwd( workingPath );
//
// 	if (isInit( workingPath ) !== true) {
// 		copyFiles( workingPath );
// 	}
//
// 	copyTemplate( name, workingPath );
//
// 	return callback( null, true );
// }
//
// function isEmpty( workingPath ) {
// 	var emptyPath = jetpack.dir( workingPath.cwd(), { empty: true });
// 	return emptyPath;
// }
//
// function isInit( workingPath ) {
// 	var file   = jetpack.path( workingPath.cwd(), '.s3f' );
// 	var result = jetpack.read( file, 'json' );
// 	return result;
// }
//
// function copyTemplate( name, workingPath ) {
//
// 	var paths = {
// 		from: jetpack.path( config.s3f.path, 'templates', 'default' ),
// 		to:   jetpack.path( workingPath.cwd(), 'templates', name )
// 	};
//
// 	jetpack.copy( paths.from, paths.to, { overwrite: true } );
// 	return paths.to;
// }
//
// function copyFiles( workingPath ) {
// 	var paths = {
// 		from: jetpack.path( config.s3f.path ),
// 		to:   jetpack.path( workingPath.cwd() )
// 	};
//
// 	var options = {
// 		overwrite: true,
// 		matching: [
// 			'**/*',
// 			'!templates/'
// 		]
// 	};
//
// 	jetpack.copy( paths.from, paths.to, options );
// 	return paths.to;
// }


// read({prompt: "Username: ", default: "test-user" }, function (er, user) {
//   read({prompt: "Password: ", default: "test-pass", silent: true }, function (er, pass) {
//     read({prompt: "Password again: ", default: "test-pass", silent: true }, function (er, pass2) {
//       console.error({user: user,
//                      pass: pass,
//                      verify: pass2,
//                      passMatch: (pass === pass2)})
//       console.error("the program should exit now")
//     })
//   })
// })
