/**
 * DO NOT EDIT THIS FILE
 */
var opts = {
	base: {
		src:   './templates',
		tmp:   './tmp',
		dst:   './dist',
		cache: './.cache'
	},
	modules: {
		styles:  'styles',
		views:   'views',
		scripts: 'scripts',
		images:  'images',
		fonts:   'fonts',
	},
	srcGlobs: {
		styles:  'screen.scss',
		views:   [
			'**/*.pug',
			'**/*.jade',
			'!{_*.pug,_*.jade,_**/*}'
		],
		scripts: '**/*.js',
		images:  '**/*',
		fonts:   '**/*'
	},
	watchGlobs: {
		styles: '**/*.scss',
		views:  '**/*'
	},

	filenames: require( __dirname + '/filenames' )
};

var template = require( __dirname + '/template' ) || 'default';
var server   = require( __dirname + '/server' );
var path     = require('path');
var _        = require('lodash');

var gulpCfg  = {
	basePaths: opts.base,
	server:    require( __dirname + '/server' ),

	styles:    {
		paths: {
			src: path.join( opts.base.src, template, opts.modules.styles ),
			tmp: path.join( opts.base.tmp, opts.modules.styles ),
			dst: path.join( opts.base.dst, opts.modules.styles ),
		},
		watch: path.join( opts.base.src, template, opts.modules.styles, (opts.watchGlobs.styles || opts.srcGlobs.styles )),
		src:  path.join( opts.base.src, template, opts.modules.styles, opts.srcGlobs.styles ),
		dest: path.join( opts.base.dst, opts.modules.styles ),
		filename: opts.filenames.styles || {}
	},

	views: {
		paths: {
			src: path.join( opts.base.src, template, opts.modules.views ),
			tmp: path.join( opts.base.tmp ),
			dst: path.join( opts.base.dst )
		},
		watch: path.join( opts.base.src, template, opts.modules.views, (opts.watchGlobs.views || opts.srcGlobs.views )),
		src: _.map(opts.srcGlobs.views, function( src ) {
			if (_.startsWith( src, '!' )) {
				return path.join( '!' + opts.base.src, template, opts.modules.views, _.trimStart( src, '!' ) );
			} else {
				return path.join( opts.base.src, template, opts.modules.views, src );
			}
		}),
		dest: path.join( opts.base.dst ),
		filename: opts.filenames.views || {}
	},

	scripts: {
		paths: {
			src: path.join( opts.base.src, template, opts.modules.scripts ),
			tmp: path.join( opts.base.tmp, opts.modules.scripts ),
			dst: path.join( opts.base.dst, opts.modules.scripts ),
		},
		watch:    path.join( opts.base.src, template, opts.modules.scripts, (opts.watchGlobs.scripts || opts.srcGlobs.scripts )),
		src:      path.join( opts.base.src, template, opts.modules.scripts, opts.srcGlobs.scripts ),
		dest:     path.join( opts.base.dst, opts.modules.scripts ),
		filename: opts.filenames.scripts || {}
	},

	images: {
		paths: {
			src: path.join( opts.base.src, template, opts.modules.images ),
			tmp: path.join( opts.base.tmp, opts.modules.images ),
			dst: path.join( opts.base.dst, opts.modules.images ),
		},
		watch:    path.join( opts.base.src, template, opts.modules.images, (opts.watchGlobs.images || opts.srcGlobs.images )),
		src:      path.join( opts.base.src, template, opts.modules.images, opts.srcGlobs.images ),
		dest:     path.join( opts.base.dst, opts.modules.images ),
		filename: opts.filenames.images || {}
	},

	fonts: {
		paths: {
			src: path.join( opts.base.src, template, opts.modules.fonts ),
			tmp: path.join( opts.base.tmp, opts.modules.fonts ),
			dst: path.join( opts.base.dst, opts.modules.fonts ),
		},
		watch:    path.join( opts.base.src, template, opts.modules.fonts, (opts.watchGlobs.fonts || opts.srcGlobs.fonts )),
		src:      path.join( opts.base.src, template, opts.modules.fonts, opts.srcGlobs.fonts ),
		dest:     path.join( opts.base.dst, opts.modules.fonts ),
		filename: opts.filenames.fonts || {}
	}
}

module.exports = gulpCfg;
